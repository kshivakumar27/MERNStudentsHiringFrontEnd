[{"D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\index.js":"1","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\App.js":"2","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\reportWebVitals.js":"3","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\reclogin.js":"4","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\viewcandidates.js":"5","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\nav.js":"6","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\recregister.js":"7","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\register.js":"8","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\protectedroute.js":"9","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\login.js":"10","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\applied.js":"11","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\home.js":"12","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\job.js":"13","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\addcompany.js":"14","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\api.js":"15","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\upcomingjob.js":"16","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\interested.js":"17","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\viewinterestedcandidates.js":"18","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\addupcomingcompany.js":"19","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\index.js":"20","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\App.js":"21","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\reportWebVitals.js":"22","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\nav.js":"23","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\login.js":"24","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\register.js":"25","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\recregister.js":"26","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\viewcandidates.js":"27","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\protectedroute.js":"28","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\reclogin.js":"29","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\applied.js":"30","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\addcompany.js":"31","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\job.js":"32","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\interested.js":"33","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\viewinterestedcandidates.js":"34","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\upcomingjob.js":"35","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\addupcomingcompany.js":"36","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\home.js":"37","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\api.js":"38"},{"size":500,"mtime":1658753839781,"results":"39","hashOfConfig":"40"},{"size":2086,"mtime":1658753853495,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1656400871732,"results":"42","hashOfConfig":"40"},{"size":4168,"mtime":1658753812057,"results":"43","hashOfConfig":"40"},{"size":1761,"mtime":1658753823080,"results":"44","hashOfConfig":"40"},{"size":1914,"mtime":1658836905827,"results":"45","hashOfConfig":"40"},{"size":5031,"mtime":1656400871680,"results":"46","hashOfConfig":"40"},{"size":7220,"mtime":1658753830540,"results":"47","hashOfConfig":"40"},{"size":437,"mtime":1658753834363,"results":"48","hashOfConfig":"40"},{"size":4224,"mtime":1658475823171,"results":"49","hashOfConfig":"40"},{"size":1499,"mtime":1658812206008,"results":"50","hashOfConfig":"40"},{"size":3072,"mtime":1658836225286,"results":"51","hashOfConfig":"40"},{"size":5713,"mtime":1658813907180,"results":"52","hashOfConfig":"40"},{"size":8328,"mtime":1658812384057,"results":"53","hashOfConfig":"40"},{"size":4174,"mtime":1658751532549,"results":"54","hashOfConfig":"40"},{"size":4820,"mtime":1658821098800,"results":"55","hashOfConfig":"40"},{"size":1554,"mtime":1658753836986,"results":"56","hashOfConfig":"40"},{"size":1852,"mtime":1658813557476,"results":"57","hashOfConfig":"40"},{"size":5897,"mtime":1658813239228,"results":"58","hashOfConfig":"40"},{"size":500,"mtime":1658753839781,"results":"59","hashOfConfig":"60"},{"size":2086,"mtime":1658753853495,"results":"61","hashOfConfig":"60"},{"size":362,"mtime":1656400871732,"results":"62","hashOfConfig":"60"},{"size":1914,"mtime":1658836905827,"results":"63","hashOfConfig":"60"},{"size":4224,"mtime":1658475823171,"results":"64","hashOfConfig":"60"},{"size":7220,"mtime":1658753830540,"results":"65","hashOfConfig":"60"},{"size":5031,"mtime":1656400871680,"results":"66","hashOfConfig":"60"},{"size":1761,"mtime":1658753823080,"results":"67","hashOfConfig":"60"},{"size":437,"mtime":1658753834363,"results":"68","hashOfConfig":"60"},{"size":4168,"mtime":1658753812057,"results":"69","hashOfConfig":"60"},{"size":1499,"mtime":1658812206008,"results":"70","hashOfConfig":"60"},{"size":8328,"mtime":1658812384057,"results":"71","hashOfConfig":"60"},{"size":5713,"mtime":1658813907180,"results":"72","hashOfConfig":"60"},{"size":1554,"mtime":1658753836986,"results":"73","hashOfConfig":"60"},{"size":1852,"mtime":1658813557476,"results":"74","hashOfConfig":"60"},{"size":4820,"mtime":1658821098800,"results":"75","hashOfConfig":"60"},{"size":5897,"mtime":1658813239228,"results":"76","hashOfConfig":"60"},{"size":3072,"mtime":1658836225286,"results":"77","hashOfConfig":"60"},{"size":4174,"mtime":1658751532549,"results":"78","hashOfConfig":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"1y7kepl",{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ac6fon",{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\index.js",[],["167","168"],"D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\App.js",["169","170"],"import logo from './logo.svg';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Nav from './nav';\nimport Login from './login';\nimport Register from './register';\nimport Reclogin from './reclogin';\nimport Recregister from './recregister';\nimport ProtectedRoute from \"./protectedroute\";\nimport Addcompany from './addcompany';\nimport job from './job';\nimport Applied from './applied';\nimport viewcandidates from './viewcandidates';\nimport Home from './home';\nimport addupcomingcompany from './addupcomingcompany';\nimport upcomingjob from './upcomingjob';\nimport interested from './interested';\nimport viewinterestedcandidates from './viewinterestedcandidates';\n\n\nfunction App() {\n  return (\n   <>\n   <Router>\n        <Nav></Nav>\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={Login} exact />\n            <Route path=\"/register\" component={Register} exact />\n            <Route path=\"/reclogin\" component={Reclogin} exact />\n            <Route path=\"/recregister\" component={Recregister} exact />\n            <Route path=\"/\" component={Home} exact />\n            <ProtectedRoute path=\"/addcompany/:id\" component={Addcompany} exact />\n            <ProtectedRoute path=\"/job/:id\" component={job} exact />\n            <ProtectedRoute path=\"/applied/:id\" component={Applied} exact />\n            <ProtectedRoute path=\"/viewcandidates/:id\" component={viewcandidates} exact />\n            <ProtectedRoute path=\"/addupcomingcompany/:id\" component={addupcomingcompany} exact />\n            <ProtectedRoute path=\"/upcomingjob/:id\" component={upcomingjob} exact />\n            <ProtectedRoute path=\"/interested/:id\" component={interested} exact />\n            <ProtectedRoute path=\"/viewinterestedcandidates/:id\" component={viewinterestedcandidates} exact />\n            \n          </Switch>\n        </div>\n      </Router>\n\n   </>\n  );\n}\n\nexport default App;\n","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\reportWebVitals.js",[],"D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\reclogin.js",[],"D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\viewcandidates.js",["171","172"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Getcandidatesdetailsbyemail, GetrecruiterbyId } from \"./api\";\nfunction Viewcandidates(props) {\n\n    let [userData,setuserData]=useState([]);\n\n    useEffect(async () => {\n        let users = await GetrecruiterbyId(props.match.params.id);\n        let userEmail=users.data.email;\n        console.log(userEmail)\n        let appliedjob=await Getcandidatesdetailsbyemail(userEmail);\n        setuserData(appliedjob.data)\n        console.log(appliedjob.data)\n    }, [])\n\n    return (\n        <>\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Student Name</th>\n                        <th scope=\"col\">College</th>\n                        <th scope=\"col\">Branch</th>\n                        <th scope=\"col\">Company Name</th>\n                        <th scope=\"col\">Job Title</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                        userData.map((use, index) => {\n                            return (\n                                <tr>\n                                    <th scope=\"row\">{use.name}</th>\n                                    <td>{use.college}</td>\n                                    <td>{use.branch}</td>\n                                    <td>{use.companyname}</td>\n                                    <td>{use.jobtitle}</td>\n                                    \n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default withRouter(Viewcandidates);","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\nav.js",["173"],"D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\recregister.js",[],"D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\register.js",[],"D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\protectedroute.js",[],"D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\login.js",["174","175"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { GetuserbyEmail, Postlogin } from \"./api\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faKey, faMailBulk, faScrewdriver } from '@fortawesome/free-solid-svg-icons'\n\nfunction Login() {\n\n    let [email, setEmail] = useState(\"\");\n    let [password, setPassword] = useState(\"\");\n    let [data, setData] = useState(\"\");\n\n    let history = useHistory();\n    let userData = { email, password }\n\n    return (\n        <>\n            <div class=\"container mt-5\">\n                <div class=\"d-flex justify-content-center h-100\">\n                    <div class=\"card1\">\n                        <div class=\"card-header\">\n                            <h3><FontAwesomeIcon icon={faScrewdriver}></FontAwesomeIcon> Student Login</h3>\n                        </div>\n                        <div class=\"card-body\">\n                            <form onSubmit={async (e) => {\n                                e.preventDefault();\n                                try {\n\n                                    let logindata = await Postlogin(userData);\n                                    window.localStorage.setItem(\"app_token\", logindata.data.token)\n                                    let token = logindata.data.token;\n\n                                     //checking if token is present then go to next page otherwise stay in same page\n                                    if (token) {\n                                        let users = await GetuserbyEmail(email);\n                                        console.log(users.data._id)\n                                        history.push(`/job/${users.data._id}`)\n                                    }\n                                    else {\n                                       alert(\"Email or password is incorrect\")\n                                        history.push(`/login`);\n                                    }\n                                }\n                                catch (error) {\n                                    console.log(error)\n                                }\n                                setEmail(\"\");\n                                setPassword(\"\");\n                            }}>\n                                <div class=\"input-group form-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faMailBulk} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\n                                    </div>\n                                    <input type=\"email\" class=\"form-control\" placeholder=\"email\" required value={email} onChange={(e) => {\n                                        setEmail(e.target.value);\n                                    }} />\n                                </div>\n                                <div class=\"input-group form-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faKey} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" placeholder=\"password\" required value={password} onChange={(e) => {\n                                        setPassword(e.target.value);\n                                    }} />\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"submit\" value=\"Login\" class=\"btn float-right btn-warning\" />\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"d-flex justify-content-center links\">\n                                Don't have an account?<Link to=\"/register\">Register</Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\n\n\n\n\n\nexport default Login;","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\applied.js",["176","177"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { GetappliedjobId, GetuserbyId } from \"./api\";\nfunction Applied(props) {\n\n    let [userData,setuserData]=useState([]);\n\n    useEffect(async () => {\n        //getting the details of candidates by their id\n        let users = await GetuserbyId(props.match.params.id);\n        let userEmail=users.data.email;\n        //getting the data of applied jobs by user email\n        let appliedjob=await GetappliedjobId(userEmail)\n        setuserData(appliedjob.data)\n    }, [])\n\n    return (\n        <>\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Job Posted On</th>\n                        <th scope=\"col\">Company Name</th>\n                        <th scope=\"col\">Job Title</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                        userData.map((use, index) => {\n                            return (\n                                <tr>\n                                    <th scope=\"row\">{use.date}</th>\n                                    <td>{use.companyname}</td>\n                                    <td>{use.jobtitle}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default withRouter(Applied);","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\home.js",["178","179","180","181"],"import React from \"react\";\nimport one from './images/slide1.jpg';\nimport two from './images/slide2.jpg';\nimport three from './images/slide3.jpg';\nimport four from './images/y.jpg';\nimport five from './images/slide4.jpg';\nimport six from './images/slide5.jpg';\nimport seven from './images/slide6.jpg';\nimport y from './images/image1.png';\n\nfunction Home() {\n    return (\n        <>\n            <div id=\"carouselExampleIndicators\" class=\"carousel slide mt-5\" data-ride=\"carousel\">\n                <ol class=\"carousel-indicators\">\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"3\"></li>\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"4\"></li>\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"5\"></li>\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"6\"></li>\n                </ol>\n                <div class=\"carousel-inner\">\n                    <div class=\"carousel-item active\">\n                        <img class=\"d-block w-100 image-fluid\" src={five} alt=\"First slide\" />\n                    </div>\n                    <div class=\"carousel-item\">\n                        <img class=\"d-block w-100 image-fluid\" src={six} alt=\"Second slide\" />\n                    </div>\n                    <div class=\"carousel-item\">\n                        <img class=\"d-block w-100 image-fluid\" src={seven} alt=\"Third slide\" />\n                    </div>\n                    <div class=\"carousel-item\">\n                        <img class=\"d-block w-100 image-fluid\" src={four} alt=\"Four slide\" />\n                    </div>\n                    <div class=\"carousel-item\">\n                        <img class=\"d-block w-100 image-fluid\" src={five} alt=\"Five slide\" />\n                    </div>\n                    <div class=\"carousel-item\">\n                        <img class=\"d-block w-100 image-fluid\" src={six} alt=\"Six slide\" />\n                    </div>\n                    <div class=\"carousel-item\">\n                        <img class=\"d-block w-100 image-fluid\" src={seven} alt=\"Seven slide\" />\n                    </div>\n                </div>\n                <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\n                    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                    <span class=\"sr-only\">Previous</span>\n                </a>\n                <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\n                    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                    <span class=\"sr-only\">Next</span>\n                </a>\n            </div>\n        </>\n    )\n}\n\nexport default Home;","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\job.js",["182","183"],"import { useHistory, withRouter } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport { Getjobs, GetuserbyId, Postappliedjobs } from \"./api\";\n\nfunction Job(props) {\n\n    let [jobData, setjobData] = useState([])\n    let [userData, setuserData] = useState([])\n\n    useEffect(async () => {\n        //getting all the job details\n        let jobs = await Getjobs();\n        setjobData(jobs.data)\n        //getting the details of candidate by his id\n        let users = await GetuserbyId(props.match.params.id);\n        setuserData(users.data)\n        console.log(users.data)\n    }, [])\n\n    let history = useHistory();\n\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row float-right mt-5\">\n                    <button class=\"btn btn-secondary up-lift\" onClick={() => {\n                        history.push(`/applied/${props.match.params.id}`);\n                    }}>Applied jobs</button>\n                </div>\n                <div></div>\n                <div className=\"row float-right mt-5\">\n                    <button class=\"btn btn-secondary up-lift\" onClick={() => {\n                        history.push(`/interested/${props.match.params.id}`);\n                    }}>Interested jobs</button>\n                </div>\n                <div className=\"row float-right mt-5\">\n                    <button class=\"btn btn-secondary up-lift\" onClick={() => {\n                        history.push(`/upcomingjob/${props.match.params.id}`);\n                    }}>upcomingjobs</button>\n                </div>\n                <div className=\"row\">\n                    <h2>Hi {userData.username} here are the some of jobs apply accoring to your Qualification and experience</h2>\n                </div>\n                <div className=\"row\">\n                    {\n                        jobData.map((user) => {\n                            return (\n                                <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12 mt-5\">\n                                    <div class=\"card test-card shadow\">\n                                        <div class=\"card-header d-flex flex-row justify-content-between bg-secondary text-light\">\n                                            <h5>\n                                                <i class=\"devicon-javascript-plain\"></i> <span class=\"test-topic font-weight-bold\">{user.companyname}</span>\n                                            </h5>\n                                            <span class=\"score-board has-result\"><strong>{user.date}</strong></span>\n                                        </div>\n                                        <div class=\"card-body\">\n                                            <div class=\"d-flex justify-content-between mt-2\">\n                                                <h5><span class=\"font-weight-bold\">Job Title:</span> {user.jobtitle}</h5>\n                                            </div>\n                                            <div class=\"d-flex justify-content-between mt-2\">\n                                                <h5><span class=\"font-weight-bold\">Location:</span> {user.location}</h5>\n                                            </div>\n                                            <div class=\"d-flex justify-content-between mt-2\">\n                                                <h5><span class=\"font-weight-bold\">Skills Required:</span> {user.skill}</h5>\n                                            </div>\n                                            <div class=\"d-flex justify-content-between mt-2\">\n                                                <h5><span class=\"font-weight-bold\">Experince required:</span> {user.experience} years</h5>\n                                            </div>\n                                            <div class=\"d-flex justify-content-between mt-2 float-right\">\n                                                <button onClick={async () => {\n                                                    let unique = userData.email + user._id;\n                                                    let details = { email: userData.email, name: userData.username, phone: userData.phone, college: userData.college, year: userData.year, branch: userData.branch, recemail: user.email, jobId: user._id, companyname: user.companyname, jobtitle: user.jobtitle, date: user.date, unique: unique }\n                                                    console.log(details);\n                                                    //posting the details of candidate  and job details to applied job collection\n                                                    let applied = await Postappliedjobs(details)\n                                                    if (applied.data.message === \"Already applied to this job\") {\n                                                        alert(\"You Have already applied to this job\");\n                                                    } else {\n                                                        alert(\"Successfully applied to this job\")\n                                                    }\n                                                }} class=\"btn btn-outline-secondary up-lift\">Apply</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default withRouter(Job);","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\addcompany.js",["184","185"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport { GetrecruiterbyId, Postcompany } from \"./api\";\nimport { faAward, faBuilding, faCalendarDay, faClipboard, faLocationArrow, faVial } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Addcompany(props) {\n\n    // below useState are set to take inputs from the recuiter to post the info of job details\n    let [companyname, setCompanyname] = useState(\"\");\n    let [jobtitle, setJobtitle] = useState(\"\");\n    let [location, setLocation] = useState(\"\");\n    let [skill, setSkill] = useState(\"\");\n    let [experience, setExperience] = useState(\"\");\n    let [date, setDate] = useState(\"\");\n    let [email,setuseremail]=useState(\"\");\n\n    useEffect(async () => {\n        console.log(props)\n        //getting information of recurutier using his id\n        let users = await GetrecruiterbyId(props.match.params.id);\n        setuseremail(users.data.email)\n        console.log(\"Mounted\")\n    }, [])\n\n    let userData = { companyname, jobtitle, location, skill, experience,date,email:email}\n    let history = useHistory();\n\n    return (\n        <>\n            <div class=\"container mt-5\">\n                <div class=\"d-flex justify-content-center h-100\">\n                    <div class=\"card1\">\n                        <div class=\"card-header\">\n                            <h3><FontAwesomeIcon icon={faClipboard}></FontAwesomeIcon> Add Job</h3>\n                        </div>\n                        <div class=\"card-body\">\n                            <form onSubmit={async (e) => {\n                                e.preventDefault();\n                                await Postcompany(userData);\n                                setCompanyname(\"\");\n                                setJobtitle(\"\");\n                                setLocation(\"\");\n                                setSkill(\"\");\n                                setExperience(\"\");\n                                setDate(\"\");\n                            }}>\n                                <div class=\"input-group form-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faBuilding} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Company Name\" required value={companyname} onChange={(e) => {\n                                        setCompanyname(e.target.value);\n                                    }} />\n                                </div>\n                                <div class=\"input-group form-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faClipboard} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Job title\" required value={jobtitle} onChange={(e) => {\n                                        setJobtitle(e.target.value);\n                                    }} />\n                                </div>\n                                <div class=\"input-group form-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faLocationArrow} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Job loacation\" required value={location} onChange={(e) => {\n                                        setLocation(e.target.value);\n                                    }} />\n                                </div>\n                                <div class=\"input-group form-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faAward} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Skills Required\" required value={skill} onChange={(e) => {\n                                        setSkill(e.target.value);\n                                    }} />\n                                </div>\n                                <div class=\"input-group form-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faVial} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Experince Required\" required value={experience} onChange={(e) => {\n                                        setExperience(e.target.value);\n                                    }} />\n                                </div>\n                                <div class=\"input-group form-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faCalendarDay} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\n                                    </div>\n                                    <input type=\"date\" class=\"form-control\" placeholder=\"Date Posted\" required value={date} onChange={(e) => {\n                                        setDate(e.target.value);\n                                    }} />\n                                </div>\n\n                                <div class=\"form-group\">\n                                    {/* After submitting the button the job and company details will be posted to database */}\n                                    <input type=\"submit\" value=\"Add Job\" class=\"btn float-right btn-warning\" />\n                                </div>\n                                \n                                <div className=\"form-group\">\n                                    {/* after clicking the view candidates button it will be redirected to view candidates page with id */}\n                                    <button className=\"btn btn-warning \" onClick={() => {\n                                        history.push(`/viewcandidates/${props.match.params.id}`);\n                                    }}>View Candidates</button>\n                                </div>\n                                 \n                                <div className=\"form-group\">\n                                    {/* after clicking the view candidates button it will be redirected to view candidates page with id */}\n                                    <button className=\"btn btn-warning \" onClick={() => {\n                                        history.push(`/addupcomingcompany/${props.match.params.id}`);\n                                    }}>add upcoming companies</button>\n                                </div>\n                                <div className=\"form-group\">\n                                    {/* after clicking the view candidates button it will be redirected to view candidates page with id */}\n                                    <button className=\"btn btn-warning \" onClick={() => {\n                                        history.push(`/viewinterestedcandidates/${props.match.params.id}`);\n                                    }}>View Interested Candidates to attend up coming companies</button>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"card-footer\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default withRouter(Addcompany) ;","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\api.js",[],"D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\upcomingjob.js",["186","187"],"import { useHistory, withRouter } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\r\nimport { Getupcomingjobs, GetuserbyId, Postinterestedjobs } from \"./api\";\r\n\r\nfunction UpcomingJob(props) {\r\n\r\n    let [jobData, setjobData] = useState([])\r\n    let [userData, setuserData] = useState([])\r\n\r\n    useEffect(async () => {\r\n        //getting all the job details\r\n        let upcomingjobs = await Getupcomingjobs();\r\n        setjobData(upcomingjobs.data)\r\n        //getting the details of candidate by his id\r\n        let users = await GetuserbyId(props.match.params.id);\r\n        setuserData(users.data)\r\n        console.log(users.data)\r\n    }, [])\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row float-right mt-5\">\r\n                    <button class=\"btn btn-secondary up-lift\" onClick={() => {\r\n                        history.push(`/interested/${props.match.params.id}`);\r\n                    }}>upcoming jobs</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <h2>Hi {userData.username} here are the some of upcoming jobs to apply accoring to your Qualification and experience</h2>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {\r\n                        jobData.map((user) => {\r\n                            return (\r\n                                <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12 mt-5\">\r\n                                    <div class=\"card test-card shadow\">\r\n                                        <div class=\"card-header d-flex flex-row justify-content-between bg-secondary text-light\">\r\n                                            <h5>\r\n                                                <i class=\"devicon-javascript-plain\"></i> <span class=\"test-topic font-weight-bold\">{user.companyname}</span>\r\n                                            </h5>\r\n                                            <span class=\"score-board has-result\"><strong>{user.date}</strong></span>\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"d-flex justify-content-between mt-2\">\r\n                                                <h5><span class=\"font-weight-bold\">Job Title:</span> {user.about}</h5>\r\n                                            </div>\r\n                                            <div class=\"d-flex justify-content-between mt-2\">\r\n                                                <h5><span class=\"font-weight-bold\">Location:</span> {user.location}</h5>\r\n                                            </div>\r\n                                           \r\n                                            <div class=\"d-flex justify-content-between mt-2 float-right\">\r\n                                                <button onClick={async () => {\r\n                                                    let unique = userData.email + user._id;\r\n                                                    let details = { email: userData.email, name: userData.username, phone: userData.phone, college: userData.college, year: userData.year, branch: userData.branch, recemail: user.email, jobId: user._id, companyname: user.companyname, about: user.about,date: user.date, unique: unique }\r\n                                                    console.log(details);\r\n                                                    //posting the details of candidate  and job details to applied job collection\r\n                                                    let interested = await Postinterestedjobs(details)\r\n                                                    if (interested.data.message === \"Already applied to this job\") {\r\n                                                        alert(\"Successfully applied to this job\")\r\n                                                    } else {\r\n                                                        alert(\"You Have already applied to this job\");\r\n                                                       \r\n                                                    }\r\n                                                }} class=\"btn btn-outline-secondary up-lift\">Interested</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpcomingJob);","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\interested.js",["188","189"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { GetinterestedjobId, GetuserbyId } from \"./api\";\r\nfunction Interested(props) {\r\n\r\n    let [userData,setuserData]=useState([]);\r\n\r\n    useEffect(async () => {\r\n        //getting the details of candidates by their id\r\n        let users = await GetuserbyId(props.match.params.id);\r\n        let userEmail=users.data.email;\r\n        //getting the data of applied jobs by user email\r\n        let interestedjob=await GetinterestedjobId(userEmail)\r\n        setuserData(interestedjob.data)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Job Posted On</th>\r\n                        <th scope=\"col\">Company Name</th>\r\n                        <th scope=\"col\">About</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                        userData.map((use, index) => {\r\n                            return (\r\n                                <tr>\r\n                                    <th scope=\"row\">{use.date}</th>\r\n                                    <td>{use.companyname}</td>\r\n                                    <td>{use.about}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Interested);","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\viewinterestedcandidates.js",["190","191"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Getinterestedcandidatesdetailsbyemail, GetrecruiterbyId } from \"./api\";\r\nfunction Viewinterestedcandidates(props) {\r\n\r\n    let [userData,setuserData]=useState([]);\r\n\r\n    useEffect(async () => {\r\n        let users = await GetrecruiterbyId(props.match.params.id);\r\n        let userEmail=users.data.email;\r\n        console.log(userEmail)\r\n        let interestedjob=await Getinterestedcandidatesdetailsbyemail(userEmail);\r\n        setuserData(interestedjob.data)\r\n        console.log(interestedjob.data)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Student Name</th>\r\n                        <th scope=\"col\">College</th>\r\n                        <th scope=\"col\">Branch</th>\r\n                        <th scope=\"col\">Company Name</th>\r\n                        <th scope=\"col\">About</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                        userData.map((use, index) => {\r\n                            return (\r\n                                <tr>\r\n                                    <th scope=\"row\">{use.name}</th>\r\n                                    <td>{use.college}</td>\r\n                                    <td>{use.branch}</td>\r\n                                    <td>{use.companyname}</td>\r\n                                    <td>{use.about}</td>\r\n                                    \r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Viewinterestedcandidates);","D:\\june28\\MERN hiring\\Hiring-fe-main\\src\\addupcomingcompany.js",["192","193","194","195"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\r\nimport { GetrecruiterbyId, Postupcomingcompany } from \"./api\";\r\nimport { faAward, faBuilding, faCalendarDay, faClipboard, faLocationArrow, faVial } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction AddUpcomingcompany(props) {\r\n\r\n    // below useState are set to take inputs from the recuiter to post the info of job details\r\n    let [companyname, setCompanyname] = useState(\"\");\r\n    let [about, setAbout] = useState(\"\");\r\n    let [location, setLocation] = useState(\"\");\r\n    let [date, setDate] = useState(\"\");\r\n    let [email,setuseremail]=useState(\"\");\r\n    \r\n\r\n    useEffect(async () => {\r\n        console.log(props)\r\n        //getting information of recurutier using his id\r\n        let users = await GetrecruiterbyId(props.match.params.id);\r\n        setuseremail(users.data.email)\r\n        console.log(\"Mounted\")\r\n    }, [])\r\n\r\n    let userData = { companyname, about, location,date,email:email}\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <div class=\"container mt-5\">\r\n                <div class=\"d-flex justify-content-center h-100\">\r\n                    <div class=\"card1\">\r\n                        <div class=\"card-header\">\r\n                            <h3><FontAwesomeIcon icon={faClipboard}></FontAwesomeIcon> Add Info</h3>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <form onSubmit={async (e) => {\r\n                                e.preventDefault();\r\n                                await Postupcomingcompany(userData);\r\n                                setCompanyname(\"\");\r\n                                setAbout(\"\");\r\n                                setLocation(\"\");\r\n                                setDate(\"\");\r\n                            }}>\r\n                                <div class=\"input-group form-group\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faBuilding} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\r\n                                    </div>\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Company Name\" required value={companyname} onChange={(e) => {\r\n                                        setCompanyname(e.target.value);\r\n                                    }} />\r\n                                </div>\r\n                                <div class=\"input-group form-group\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faClipboard} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\r\n                                    </div>\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"about\" required value={about} onChange={(e) => {\r\n                                        setAbout(e.target.value);\r\n                                    }} />\r\n                                </div>\r\n                                <div class=\"input-group form-group\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faLocationArrow} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\r\n                                    </div>\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Job loacation\" required value={location} onChange={(e) => {\r\n                                        setLocation(e.target.value);\r\n                                    }} />\r\n                                </div>\r\n                                \r\n                                <div class=\"input-group form-group\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\"><FontAwesomeIcon icon={faCalendarDay} style={{ fontSize: '1.75em' }}></FontAwesomeIcon></span>\r\n                                    </div>\r\n                                    <input type=\"date\" class=\"form-control\" placeholder=\"Date Posted\" required value={date} onChange={(e) => {\r\n                                        setDate(e.target.value);\r\n                                    }} />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                <div class=\"form-group\">\r\n                                    {/* After submitting the button the job and company details will be posted to database */}\r\n                                    <input type=\"submit\" value=\"Add Job\" class=\"btn float-right btn-warning\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {/* after clicking the view candidates button it will be redirected to view candidates page with id */}\r\n                                    <button className=\"btn btn-warning \" onClick={() => {\r\n                                        history.push(`/viewinterestedcandidates/${props.match.params.id}`);\r\n                                    }}>Candidates ready to attend</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"card-footer\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddUpcomingcompany) ;","D:\\june28\\github upload\\hiring\\hiring frontend\\src\\index.js",[],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\App.js",["196","197"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\reportWebVitals.js",[],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\nav.js",["198"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\login.js",["199","200"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\register.js",[],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\recregister.js",[],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\viewcandidates.js",["201","202"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\protectedroute.js",[],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\reclogin.js",[],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\applied.js",["203","204"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\addcompany.js",["205","206"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\job.js",["207","208"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\interested.js",["209","210"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\viewinterestedcandidates.js",["211","212"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\upcomingjob.js",["213","214"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\addupcomingcompany.js",["215","216","217","218"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\home.js",["219","220","221","222"],"D:\\june28\\github upload\\hiring\\hiring frontend\\src\\api.js",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":1,"column":8,"nodeType":"229","messageId":"230","endLine":1,"endColumn":12},{"ruleId":"227","severity":1,"message":"231","line":9,"column":3,"nodeType":"229","messageId":"230","endLine":9,"endColumn":7},{"ruleId":"232","severity":1,"message":"233","line":8,"column":15,"nodeType":"234","endLine":15,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":15,"column":8,"nodeType":"236","endLine":15,"endColumn":10,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":18,"column":17,"nodeType":"240","endLine":18,"endColumn":52},{"ruleId":"227","severity":1,"message":"241","line":11,"column":10,"nodeType":"229","messageId":"230","endLine":11,"endColumn":14},{"ruleId":"227","severity":1,"message":"242","line":11,"column":16,"nodeType":"229","messageId":"230","endLine":11,"endColumn":23},{"ruleId":"232","severity":1,"message":"233","line":8,"column":15,"nodeType":"234","endLine":15,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":15,"column":8,"nodeType":"236","endLine":15,"endColumn":10,"suggestions":"243"},{"ruleId":"227","severity":1,"message":"244","line":2,"column":8,"nodeType":"229","messageId":"230","endLine":2,"endColumn":11},{"ruleId":"227","severity":1,"message":"245","line":3,"column":8,"nodeType":"229","messageId":"230","endLine":3,"endColumn":11},{"ruleId":"227","severity":1,"message":"246","line":4,"column":8,"nodeType":"229","messageId":"230","endLine":4,"endColumn":13},{"ruleId":"227","severity":1,"message":"247","line":9,"column":8,"nodeType":"229","messageId":"230","endLine":9,"endColumn":9},{"ruleId":"232","severity":1,"message":"233","line":12,"column":15,"nodeType":"234","endLine":20,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":20,"column":8,"nodeType":"236","endLine":20,"endColumn":10,"suggestions":"248"},{"ruleId":"232","severity":1,"message":"233","line":21,"column":15,"nodeType":"234","endLine":27,"endColumn":6},{"ruleId":"232","severity":1,"message":"249","line":27,"column":8,"nodeType":"236","endLine":27,"endColumn":10,"suggestions":"250"},{"ruleId":"232","severity":1,"message":"233","line":12,"column":15,"nodeType":"234","endLine":20,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":20,"column":8,"nodeType":"236","endLine":20,"endColumn":10,"suggestions":"251"},{"ruleId":"232","severity":1,"message":"233","line":8,"column":15,"nodeType":"234","endLine":15,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":15,"column":8,"nodeType":"236","endLine":15,"endColumn":10,"suggestions":"252"},{"ruleId":"232","severity":1,"message":"233","line":8,"column":15,"nodeType":"234","endLine":15,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":15,"column":8,"nodeType":"236","endLine":15,"endColumn":10,"suggestions":"253"},{"ruleId":"227","severity":1,"message":"254","line":8,"column":10,"nodeType":"229","messageId":"230","endLine":8,"endColumn":17},{"ruleId":"227","severity":1,"message":"255","line":8,"column":76,"nodeType":"229","messageId":"230","endLine":8,"endColumn":82},{"ruleId":"232","severity":1,"message":"233","line":20,"column":15,"nodeType":"234","endLine":26,"endColumn":6},{"ruleId":"232","severity":1,"message":"249","line":26,"column":8,"nodeType":"236","endLine":26,"endColumn":10,"suggestions":"256"},{"ruleId":"227","severity":1,"message":"228","line":1,"column":8,"nodeType":"229","messageId":"230","endLine":1,"endColumn":12},{"ruleId":"227","severity":1,"message":"231","line":9,"column":3,"nodeType":"229","messageId":"230","endLine":9,"endColumn":7},{"ruleId":"238","severity":1,"message":"239","line":18,"column":17,"nodeType":"240","endLine":18,"endColumn":52},{"ruleId":"227","severity":1,"message":"241","line":11,"column":10,"nodeType":"229","messageId":"230","endLine":11,"endColumn":14},{"ruleId":"227","severity":1,"message":"242","line":11,"column":16,"nodeType":"229","messageId":"230","endLine":11,"endColumn":23},{"ruleId":"232","severity":1,"message":"233","line":8,"column":15,"nodeType":"234","endLine":15,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":15,"column":8,"nodeType":"236","endLine":15,"endColumn":10,"suggestions":"257"},{"ruleId":"232","severity":1,"message":"233","line":8,"column":15,"nodeType":"234","endLine":15,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":15,"column":8,"nodeType":"236","endLine":15,"endColumn":10,"suggestions":"258"},{"ruleId":"232","severity":1,"message":"233","line":21,"column":15,"nodeType":"234","endLine":27,"endColumn":6},{"ruleId":"232","severity":1,"message":"249","line":27,"column":8,"nodeType":"236","endLine":27,"endColumn":10,"suggestions":"259"},{"ruleId":"232","severity":1,"message":"233","line":12,"column":15,"nodeType":"234","endLine":20,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":20,"column":8,"nodeType":"236","endLine":20,"endColumn":10,"suggestions":"260"},{"ruleId":"232","severity":1,"message":"233","line":8,"column":15,"nodeType":"234","endLine":15,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":15,"column":8,"nodeType":"236","endLine":15,"endColumn":10,"suggestions":"261"},{"ruleId":"232","severity":1,"message":"233","line":8,"column":15,"nodeType":"234","endLine":15,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":15,"column":8,"nodeType":"236","endLine":15,"endColumn":10,"suggestions":"262"},{"ruleId":"232","severity":1,"message":"233","line":12,"column":15,"nodeType":"234","endLine":20,"endColumn":6},{"ruleId":"232","severity":1,"message":"235","line":20,"column":8,"nodeType":"236","endLine":20,"endColumn":10,"suggestions":"263"},{"ruleId":"227","severity":1,"message":"254","line":8,"column":10,"nodeType":"229","messageId":"230","endLine":8,"endColumn":17},{"ruleId":"227","severity":1,"message":"255","line":8,"column":76,"nodeType":"229","messageId":"230","endLine":8,"endColumn":82},{"ruleId":"232","severity":1,"message":"233","line":20,"column":15,"nodeType":"234","endLine":26,"endColumn":6},{"ruleId":"232","severity":1,"message":"249","line":26,"column":8,"nodeType":"236","endLine":26,"endColumn":10,"suggestions":"264"},{"ruleId":"227","severity":1,"message":"244","line":2,"column":8,"nodeType":"229","messageId":"230","endLine":2,"endColumn":11},{"ruleId":"227","severity":1,"message":"245","line":3,"column":8,"nodeType":"229","messageId":"230","endLine":3,"endColumn":11},{"ruleId":"227","severity":1,"message":"246","line":4,"column":8,"nodeType":"229","messageId":"230","endLine":4,"endColumn":13},{"ruleId":"227","severity":1,"message":"247","line":9,"column":8,"nodeType":"229","messageId":"230","endLine":9,"endColumn":9},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["267"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["268"],"'one' is defined but never used.","'two' is defined but never used.","'three' is defined but never used.","'y' is defined but never used.",["269"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["270"],["271"],["272"],["273"],"'faAward' is defined but never used.","'faVial' is defined but never used.",["274"],["275"],["276"],["277"],["278"],["279"],["280"],["281"],["282"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"283","fix":"285"},{"desc":"283","fix":"286"},{"desc":"287","fix":"288"},{"desc":"283","fix":"289"},{"desc":"283","fix":"290"},{"desc":"283","fix":"291"},{"desc":"287","fix":"292"},{"desc":"283","fix":"293"},{"desc":"283","fix":"294"},{"desc":"287","fix":"295"},{"desc":"283","fix":"296"},{"desc":"283","fix":"297"},{"desc":"283","fix":"298"},{"desc":"283","fix":"299"},{"desc":"287","fix":"300"},"Update the dependencies array to be: [props.match.params.id]",{"range":"301","text":"302"},{"range":"303","text":"302"},{"range":"304","text":"302"},"Update the dependencies array to be: [props]",{"range":"305","text":"306"},{"range":"307","text":"302"},{"range":"308","text":"302"},{"range":"309","text":"302"},{"range":"310","text":"306"},{"range":"311","text":"302"},{"range":"312","text":"302"},{"range":"313","text":"306"},{"range":"314","text":"302"},{"range":"315","text":"302"},{"range":"316","text":"302"},{"range":"317","text":"302"},{"range":"318","text":"306"},[566,568],"[props.match.params.id]",[569,571],[731,733],[1224,1226],"[props]",[793,795],[598,600],[619,621],[1170,1172],[566,568],[569,571],[1224,1226],[731,733],[598,600],[619,621],[793,795],[1170,1172]]