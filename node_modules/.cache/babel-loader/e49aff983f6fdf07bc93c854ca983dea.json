{"ast":null,"code":"var _jsxFileName = \"D:\\\\june28\\\\github upload\\\\hiring\\\\hiring frontend\\\\src\\\\applied.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { GetappliedjobId, GetuserbyId } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Applied(props) {\n  _s();\n\n  let [userData, setuserData] = useState([]);\n  useEffect(async () => {\n    //getting the details of candidates by their id\n    let users = await GetuserbyId(props.match.params.id);\n    let userEmail = users.data.email; //getting the data of applied jobs by user email\n\n    let appliedjob = await GetappliedjobId(userEmail);\n    setuserData(appliedjob.data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Job Posted On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: userData.map((use, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: use.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: use.companyname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: use.jobtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Applied, \"xD+ujAI63KUiWdAiXARs1gQafiI=\");\n\n_c = Applied;\nexport default _c2 = withRouter(Applied);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Applied\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/june28/github upload/hiring/hiring frontend/src/applied.js"],"names":["React","useEffect","useState","withRouter","GetappliedjobId","GetuserbyId","Applied","props","userData","setuserData","users","match","params","id","userEmail","data","email","appliedjob","map","use","index","date","companyname","jobtitle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEpB,MAAI,CAACC,QAAD,EAAUC,WAAV,IAAuBP,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClB;AACA,QAAIS,KAAK,GAAG,MAAML,WAAW,CAACE,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAA7B;AACA,QAAIC,SAAS,GAACJ,KAAK,CAACK,IAAN,CAAWC,KAAzB,CAHkB,CAIlB;;AACA,QAAIC,UAAU,GAAC,MAAMb,eAAe,CAACU,SAAD,CAApC;AACAL,IAAAA,WAAW,CAACQ,UAAU,CAACF,IAAZ,CAAX;AACH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAA,2BACI;AAAO,MAAA,KAAK,EAAC,qBAAb;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBAEQP,QAAQ,CAACU,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzB,8BACI;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA,wBAAiBD,GAAG,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKF,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKH,GAAG,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARD;AAFR;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA0BH;;GAvCQjB,O;;KAAAA,O;AAyCT,qBAAeH,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { GetappliedjobId, GetuserbyId } from \"./api\";\nfunction Applied(props) {\n\n    let [userData,setuserData]=useState([]);\n\n    useEffect(async () => {\n        //getting the details of candidates by their id\n        let users = await GetuserbyId(props.match.params.id);\n        let userEmail=users.data.email;\n        //getting the data of applied jobs by user email\n        let appliedjob=await GetappliedjobId(userEmail)\n        setuserData(appliedjob.data)\n    }, [])\n\n    return (\n        <>\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Job Posted On</th>\n                        <th scope=\"col\">Company Name</th>\n                        <th scope=\"col\">Job Title</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                        userData.map((use, index) => {\n                            return (\n                                <tr>\n                                    <th scope=\"row\">{use.date}</th>\n                                    <td>{use.companyname}</td>\n                                    <td>{use.jobtitle}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default withRouter(Applied);"]},"metadata":{},"sourceType":"module"}